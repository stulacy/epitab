% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contingency_table.R
\name{contingency_table}
\alias{contingency_table}
\title{Builds a contingency table}
\usage{
contingency_table(independents, data, outcomes = NULL, row_funcs = NULL,
  col_funcs = NULL, frequency = TRUE)
}
\arguments{
\item{independents}{A named list of independent variables, which will
be distributed down the table's rows. The variables must be specified
by strings, with the item name used as the column header.}

\item{data}{The data set that contains the columns specified in
\code{cat_vars} and \code{outcome}.}

\item{outcomes}{The variables to cross-tabulate by. These will be
distributed across the table's columns. Specified as a named list of strings.
Must correspond to factor or character variables.}

\item{row_funcs}{A list of functions that are applied row-wise to the table,
one independent variable at a time, providing a value for each level of
the factors specified in \code{independents}.
See the vignette for a description of how to specify this.
Two functions: \code{odds_ratio} and \code{hazard_ratio} come
provided with the package.}

\item{frequency}{Whether to include the counts of each level of \code{cat_vars}.}
}
\value{
An S3 object of class \code{contintab}, that provides the cell contents
  as a matrix of strings.
}
\description{
A contingency table summarises a data set with multiple categorical variables
in many ways. There is generally an outcome variable of interest, and the
independent variables will be cross-tabulated with this outcome. Summary statistics
are also often provided, along with the results of models fitting a relationship
between the covariates and the outcome.
}
\details{
This function builds up a contingency table to summarise a data set, which
can later be exported in a publication friendly format.
}
\examples{

# This example uses a dummy data set of whether an individual was treated or not
treat_df <- data.frame(age=factor(sample(c("0-20", "21-60", ">61"), 100, replace=TRUE),
                                  levels=c('0-20', '21-60', '>61')),
                       sex=factor(sample(c("M", "F"), 100, replace=TRUE),
                                  levels=c('F', 'M')),
                       treated=factor(sample(c("Yes", "No"), 100, replace=TRUE),
                                      levels=c('Yes', 'No')))

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   data=treat_df)

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   treat_df,
                   outcomes=list('Treated'='treated'))

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   treat_df,
                   outcomes=list('Treated'='treated'),
                   row_funcs=list("Odds ratio"=odds_ratio('treated')))

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   treat_df,
                   outcomes=list('Treated'='treated'),
                   row_funcs=list("Odds ratio"=odds_ratio('treated'),
                               "Adjusted odds ratio"=odds_ratio('treated', adjusted=TRUE)))


}
