% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/contingency_table.R
\name{contingency_table}
\alias{contingency_table}
\title{Builds a contingency table}
\usage{
contingency_table(cat_vars, data, outcome = NULL, models = NULL,
  cox_outcome = NULL, frequency = TRUE, custom_functions = NULL)
}
\arguments{
\item{cat_vars}{A named list of independent variables, where the names are
used as the column headers. The variables must be specified by strings.}

\item{data}{The data set that contains the columns specified in
\code{cat_vars} and \code{outcome}.}

\item{outcome}{The outcome variable of interest, provided as a named list.
Must be a factor. The outcome must be specified as a string.}

\item{models}{An optional list of functions that apply a model to the
data, providing a value for each level of the factors specified in
\code{cat_vars}. See the vignette for a description of how to specify this.
One function \code{odds_ratio} comes provided with the package.}

\item{cox_outcome}{A survival object representing the survival outcome of the
Cox model.}
}
\value{
An S3 object of class \code{contintab}, that provides the cell contents
  as a matrix of strings.
}
\description{
A contingency table summarises a data set with multiple categorical variables
in many ways. There is generally an outcome variable of interest, and the
independent variables will be cross-tabulated with this outcome. Summary statistics
are also often provided, along with the results of models fitting a relationship
between the covariates and the outcome.
}
\details{
This function builds up a contingency table to summarise a data set, which
can later be exported in a publication friendly format.
}
\examples{

# This example uses a dummy data set of whether an individual was treated or not
treat_df <- data.frame(age=factor(sample(c("0-20", "21-60", ">61"), 100, replace=TRUE),
                                  levels=c('0-20', '21-60', '>61')),
                       sex=factor(sample(c("M", "F"), 100, replace=TRUE),
                                  levels=c('F', 'M')),
                       treated=factor(sample(c("Yes", "No"), 100, replace=TRUE),
                                      levels=c('Yes', 'No')))

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   data=treat_df)

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   treat_df,
                   outcome=list('Treated'='treated'))

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   treat_df,
                   outcome=list('Treated'='treated'),
                   models=list("Odds ratio"="odds_ratio"))

 contingency_table(list("Age at diagnosis"='age', "Sex"='sex'),
                   treat_df,
                   outcome=list('Treated'='treated'),
                   models=list("Odds ratio"="odds_ratio",
                               "Adjusted odds ratio"="adj_odds_ratio"))


}
